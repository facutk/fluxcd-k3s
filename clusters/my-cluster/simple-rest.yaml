apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-html
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: hello-html
  template:
    metadata:
      labels:
        app: hello-html
    spec:
      containers:
      - name: hello-html
        image: facutk/hello-html:1.0.0-rc.6 # {"$imagepolicy": "flux-system:hello-html"}
        # resources:
        # requests:
        # memory: "64Mi"
        # cpu: "100m"
        # limits:
        # memory: "128Mi"
        # cpu: "500m"
        ports:
        - containerPort: 80
        imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: hello-html
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 80
    name: tcp
  selector:
    app: hello-html
---
apiVersion: image.toolkit.fluxcd.io/v1beta1
kind: ImageRepository
metadata:
  name: hello-html
  namespace: flux-system
spec:
  image: facutk/hello-html
  interval: 1m0s
---
apiVersion: image.toolkit.fluxcd.io/v1beta1
kind: ImagePolicy
metadata:
  name: hello-html
  namespace: flux-system
spec:
  imageRepositoryRef:
    name: hello-html
  policy:
    semver:
      range: ^1.x-0
---
apiVersion: image.toolkit.fluxcd.io/v1beta1
kind: ImageUpdateAutomation
metadata:
  name: flux-system
  namespace: flux-system
spec:
  interval: 1m0s
  sourceRef:
    kind: GitRepository
    name: flux-system
  git:
    checkout:
      ref:
        branch: main
    commit:
      author:
        email: fluxcdbot@users.noreply.github.com
        name: fluxcdbot
      messageTemplate: '{{range .Updated.Images}}{{println .}}{{end}}'
    push:
      branch: main
  update:
    path: ./clusters/my-cluster
    strategy: Setters
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: simple-rest-golang-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: simple-rest-golang
  template:
    metadata:
      labels:
        app: simple-rest-golang
    spec:
      containers:
      - name: simple-rest-golang
        image: fransafu/simple-rest-golang:1.0.0
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 8080
        imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: simple-rest-golang-service
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 8080
    name: tcp
  selector:
    app: simple-rest-golang
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: simple-rest-golang-ingress
  namespace: default
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web
spec:
  rules:
  - http:
      paths:
      - path: /notes
        pathType: Prefix
        backend:
          service:
            name: simple-rest-golang-service
            port:
              number: 80
      - path: /
        pathType: Prefix
        backend:
          service:
            name: hello-html
            port:
              number: 80
